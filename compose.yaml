x-common: &common
  tty: true
  networks:
    - app

services:
  app:
    container_name: ${SERVICENAME}
    build:
      context: .
      dockerfile: docker/app/Dockerfile
      args:
        - target=dev
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USERNAME=${USER:-user}
    volumes:
      - ./:/app
      - ./.env:/app/.env
    ports:
      - "8080:8080"
    env_file: .env
    environment:
      GO_ENV: "dev"
    command: /bin/sh -c "air -c .air.toml"
    stdin_open: true
    <<: *common

  db:
    container_name: ${SERVICENAME}_db
    image: postgres:latest
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_HOST_AUTH_METHOD: trust
      TZ: 'Asia/Tokyo'
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - db_data:/var/lib/postgresql/data
    <<: *common

  pga:
    container_name: ${SERVICENAME}_pga
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGA_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGA_PASSWORD}
    ports:
      - "8081:80"
    depends_on:
      db:
        condition: service_started
    <<: *common

networks:
  app:
    driver: bridge

volumes:
  db_data: